name: 'build with pyInstaller'

on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              pyinstaller -F -w -n priceComparison_mac -i resources/priceComparison.icns gui.py &&
              cd dist/ && 
              zip -r9 priceComparison_mac priceComparison_mac.app/
            # use for auto-release:
            OUT_FILE_NAME: priceComparison_mac.zip
            # ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F -w -n priceComparison_win -i resources/priceComparison.ico gui.py
            # use for auto-release:
            OUT_FILE_NAME: priceComparison_win.exe
            #ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-latest
            TARGET: linux
            CMD_BUILD: pyinstaller -F -w -n priceComparison_linux -i resources/priceComparison.ico gui.py
            # use for auto-release:
            OUT_FILE_NAME: priceComparison_linux
            #ASSET_MIME:

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: 3.11

    - run: pip install -r requirements.txt pyinstaller
    - run: ${{ matrix.CMD_BUILD }}
    # Optionally verify that it works (provided that it does not need user interaction)
    # - run: ./dist/gui
    - uses: actions/upload-artifact@v3
      with:
        path: dist/${{ matrix.OUT_FILE_NAME }}
